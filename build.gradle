/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
  // try to resolve by pom first
  mavenCentral {
    metadataSources {
      mavenPom()
    }
  }
  // try to get artifacts if no useful pom is found
  mavenCentral {
    metadataSources {
      artifact()
    }
  }
  // Ivy can be used as well
  ivy {
    url "https://www.sosy-lab.org/ivy"
    patternLayout {
      artifact "/[organisation]/[module]/[classifier]-[revision].[ext]"
      // ivy "/[organisation]/[module]/ivy-[revision].xml"
    }
    metadataSources {
       artifact()
    }
  }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.9.3'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    
	  implementation 'org.sosy-lab:java-smt:3.14.3'
    
  	runtimeOnly group: 'de.uni-freiburg.informatik.ultimate', name: 'smtinterpol', version: '2.5-916-ga5843d8b', ext: 'jar'
	
}

application {
    // Define the main class for the application.
    mainClass = 'org.sosy_lab.java_smt_example.SolverOverviewTable'
}

run {
    standardInput = System.in
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


test {
    testLogging {
        events "failed"
        showStandardStreams = true
        exceptionFormat "full"
        showCauses false
        showExceptions true
        showStackTraces false
        showStandardStreams = false
    }
    reports.html.required = true 
}
